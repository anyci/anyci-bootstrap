#!/usr/bin/env bash
set -eo pipefail
readonly __ENTRY=$(basename "$0")
log(){ printf "# %-${__lpad:-17}s [${__ll:-INFO}] $*\\n" "($__ENTRY)" >&2; }
die(){ __ll=ERR log "$*"; exit 1; }

# prints age of a path in seconds
age() { echo $(( $(date +%s) - $(date -r "$1" +%s) )); }
[[ "$OSTYPE" =~ darwin|macos* ]] && md5sum='md5 -r' || md5sum="md5sum"

ANYCI_HOME="${ANYCI_HOME:-$HOME/.anyci}"
ANYCI_URL="${ANYCI_URL:-https://github.com/anyci/anyci.git}"
ANYCI_MAX_AGE="${ANYCI_MAX_AGE:-60}"
mirror="$ANYCI_HOME/mirrors/$($md5sum <<< "$ANYCI_URL" | awk '{print $1}')"

log "AnyCI repository: $ANYCI_URL"
[ -d "$mirror" ] || {
  log "cloning AnyCI repository..."
  git clone --bare --mirror "$ANYCI_URL" "$mirror" 2>&1 | sed "s/^/#    /g"
}

last_update="$(age "$mirror")"
log "Age of AnyCI repository: ${last_update}s (max age is ${ANYCI_MAX_AGE}s)"
[ "$last_update" -lt "$ANYCI_MAX_AGE" ] || (
  log "updating AnyCI repository..."
  cd "$mirror"
  git remote update 2>&1 | sed "s/^/#    /g"
  touch .
)

ANYCI_ROOT="$(mktemp -d "$ANYCI_HOME/workspace-XXXXXXX")"
[ "${ANYCI_SKIP_CLEANUP:-false}" = false ] || \
  trap 'log "cleaning up. ANYCI_SKIP_CLEANUP=true to skip."; rm -rf "$ANYCI_ROOT"' EXIT

log "creating workspace: $ANYCI_ROOT"
git clone -q "$mirror" "$ANYCI_ROOT" 2>&1 | sed "s/^/#    /g"

# ci handoff...
cd "$ANYCI_ROOT"
[ -z "$ANYCI_BRANCH" ] || git checkout "$ANYCI_BRANCH" || die "ANYCI_BRANCH checkout failed"
bin/anyci "$@"
